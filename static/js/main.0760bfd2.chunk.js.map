{"version":3,"sources":["Components/Searchbar/Serachbar.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Modal/modal.js","App.js","index.js"],"names":["Searchbar","state","searchQuery","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onQueryUpdate","trim","className","onSubmit","this","type","autoComplete","autoFocus","placeholder","onInput","Component","ImageGalleryItem","card","toggleModal","src","webformatURL","alt","tags","onClick","largeImageURL","id","ImageGallery","cards","map","el","Button","fetchCards","modalRoot","document","querySelector","Modal","handleKeyDown","code","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","bigPicture","App","page","status","showModal","fetch","then","r","json","prevState","hits","scrollTo","top","documentElement","scrollHeight","behavior","picture","prevProps","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0760bfd2.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass Searchbar extends Component {\n  state = {\n    searchQuery: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ searchQuery: e.currentTarget.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onQueryUpdate(this.state.searchQuery.trim());\n    this.setState({ searchQuery: \"\" });\n  };\n\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onInput={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\n\nfunction ImageGalleryItem(card, toggleModal) {\n  return (\n    <li className=\"ImageGalleryItem\" key={card.id}>\n      <img\n        src={card.webformatURL}\n        alt={`${card.tags}`}\n        className=\"ImageGalleryItem-image\"\n        onClick={() => toggleModal(card.largeImageURL)}\n      />\n    </li>\n  );\n}\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem/ImageGalleryItem\";\n\nfunction ImageGallery({ cards, toggleModal }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {cards.map((el) => ImageGalleryItem(el, toggleModal))}\n    </ul>\n  );\n}\n\nexport default ImageGallery;\n","function Button({ fetchCards }) {\n  return (\n    <button type=\"button\" className=\"Button\" onClick={fetchCards}>\n      Load More\n    </button>\n  );\n}\n\nexport default Button;\n","import { createPortal } from \"react-dom\";\nimport { Component } from \"react\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.toggleModal();\n    }\n  };\n\n  handleBackdropClick = (e) => {\n    if (e.target === e.currentTarget) {\n      this.props.toggleModal();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          <img src={this.props.bigPicture} alt=\"\" />\n        </div>\n      </div>,\n      modalRoot\n    );\n  }\n}\n\nexport default Modal;\n","import { Component } from \"react\";\nimport Searchbar from \"./Components/Searchbar/Serachbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport Loader from \"react-loader-spinner\";\nimport Modal from \"./Components/Modal/modal\";\n\nclass App extends Component {\n  state = {\n    cards: [],\n    searchQuery: \"\",\n    page: 1,\n    status: \"idle\",\n    showModal: false,\n    bigPicture: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchCards();\n    }\n  }\n\n  fetchCards = () => {\n    this.setState({ status: \"pending\" });\n    fetch(\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${this.state.searchQuery}&page=${this.state.page}&per_page=12&key=23035178-c9501c24659a46c37914a5a12`\n    )\n      .then((r) => r.json())\n      .then((r) => {\n        this.setState((prevState) => ({\n          cards: [...prevState.cards, ...r.hits],\n          page: this.state.page + 1,\n          status: \"resolved\",\n        }));\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n      });\n  };\n\n  onQueryUpdate = (searchQuery) => {\n    this.setState({\n      cards: [],\n      searchQuery: searchQuery,\n      page: 1,\n      status: \"idle\",\n    });\n  };\n\n  toggleModal = (picture) => {\n    this.setState({ showModal: !this.state.showModal, bigPicture: picture });\n  };\n\n  render() {\n    const { cards, searchQuery, page, status, showModal, bigPicture } =\n      this.state;\n    return (\n      <div className=\"App\">\n        <Searchbar onQueryUpdate={this.onQueryUpdate} />\n        <ImageGallery cards={cards} toggleModal={this.toggleModal} />\n        {status === \"pending\" && (\n          <Loader\n            type=\"Puff\"\n            color=\"#00BFFF\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {status === \"resolved\" && (\n          <Button\n            searchQuery={searchQuery}\n            page={page}\n            fetchCards={this.fetchCards}\n          />\n        )}\n        {showModal && (\n          <Modal toggleModal={this.toggleModal} bigPicture={bigPicture} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}